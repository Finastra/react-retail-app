{"version":3,"file":"main.js","mappings":";;;;;;;;;;;AAAA,uEAAuD;AACvD,qEAAqD;AACrD,uDAAuF;AACvF,uDAA8C;AAC9C,mEAAmD;AACnD,mEAAyD;AACzD,mGAAmE;AACnE,qGAAqE;AACrE,mHAA6F;AAC7F,0FAAsD;AACtD,iFAAkD;AA2BlD,IAAa,SAAS,GAAtB,MAAa,SAAS;IACpB,SAAS,CAAC,QAA4B;QACpC,QAAQ;aACL,KAAK,CAAC,+BAAgB,CAAC;aACvB,OAAO,CACN,EAAE,IAAI,EAAE,SAAS,EAAE,MAAM,EAAE,sBAAa,CAAC,GAAG,EAAE,EAC9C,EAAE,IAAI,EAAE,iBAAiB,EAAE,MAAM,EAAE,sBAAa,CAAC,GAAG,EAAE,EACtD,EAAE,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,sBAAa,CAAC,GAAG,EAAE,CAC9C;aACA,SAAS,CAAC;YACT,IAAI,EAAE,GAAG;YACT,MAAM,EAAE,sBAAa,CAAC,GAAG;SAC1B,CAAC,CAAC;IACP,CAAC;CACF;AAdY,SAAS;IAzBrB,mBAAM,EAAC;QACN,OAAO,EAAE;YACP,wBAAU,CAAC,YAAY,CAAC;gBACtB,OAAO,EAAE,CAAC,qBAAY,CAAC;gBACvB,QAAQ,EAAE,uCAAiB;aAC5B,CAAC;YACF,qBAAY,CAAC,OAAO,CAAC;gBACnB,QAAQ,EAAE,IAAI;gBACd,aAAa,EAAE,aAAoB,KAAK,YAAY;aACrD,CAAC;YACH,gCAAiB,CAAC,YAAY,CAAC;gBAC5B,QAAQ,EAAE,sDAAwB;aACnC,CAAC;YACF,gCAAiB,CAAC,OAAO,CAAC;gBACxB,SAAS,EAAE,SAAS;gBACpB,QAAQ,EAAE,uCAAS;aACpB,CAAC;YACF,0BAAW,CAAC,YAAY,CAAC;gBACvB,QAAQ,EAAE,yCAAkB;gBAC5B,OAAO,EAAE,CAAC,qBAAY,CAAC;aACxB,CAAC;YACF,4BAAY;YACZ,4BAAY;SACb;KACF,CAAC;GACW,SAAS,CAcrB;AAdY,8BAAS;;;;;;;;;;;;ACrCtB,mEAA+C;AAC/C,uDAAiD;AACjD,2DAA+C;AAG/C,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAC3B,gBAAgB,CAAC;IACjB,+FAA+F;IAK/F,WAAW;QACT,OAAO,IAAI,CAAC;QACZ,8EAA8E;IAChF,CAAC;CACF;AAJC;IAHC,gBAAG,GAAE;IACL,wBAAM,GAAE;IACR,0BAAW,GAAE;;;;mDAIb;AAVU,gBAAgB;IAD5B,uBAAU,EAAC,QAAQ,CAAC;;GACR,gBAAgB,CAW5B;AAXY,4CAAgB;;;;;;;;;;;;ACL7B,uDAAwC;AACxC,2DAAkD;AAClD,kGAAuD;AAMvD,IAAa,YAAY,GAAzB,MAAa,YAAY;CAAG;AAAf,YAAY;IAJxB,mBAAM,EAAC;QACN,OAAO,EAAE,CAAC,yBAAc,CAAC;QACzB,WAAW,EAAE,CAAC,oCAAgB,CAAC;KAChC,CAAC;GACW,YAAY,CAAG;AAAf,oCAAY;;;;;;;;;;;;ACPzB,uDAA4D;AAI5D,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAC3B,GAAG,CAAC,GAAQ,EAAE,GAAa,EAAE,IAAc;QAEzC,IAAI,GAAG,CAAC,eAAe,EAAE,EAAE;YACzB,OAAO,IAAI,EAAE,CAAC;SACf;QAEA;;;;aAIK;QAEN,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAEzB,CAAC;CAEF;AAjBY,gBAAgB;IAD5B,uBAAU,GAAE;GACA,gBAAgB,CAiB5B;AAjBY,4CAAgB;;;;;;;;;;;;;ACL7B,mEAA8F;AAC9F,uDAAoD;AACpD,uDAA+C;AAG/C,IAAa,iBAAiB,yBAA9B,MAAa,iBAAiB;IAG5B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAFvC,WAAM,GAAG,IAAI,eAAM,CAAC,mBAAiB,CAAC,IAAI,CAAC,CAAC;IAEF,CAAC;IAEpD,kBAAkB;QAChB,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QACrD,MAAM,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;QAC3D,MAAM,MAAM,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;QAErD,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;kBACF,MAAM;kBACN,SAAS;kBACT,MAAM,EAAE,CAAC,CAAC;QAExB,OAAO;YACL,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,aAAa,CAAC;YAC7C,cAAc,EAAE;gBACd,SAAS,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,gBAAgB,CAAC;gBACnD,aAAa,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,oBAAoB,CAAC;aAC5D;YACD,UAAU,EAAE;gBACV,KAAK,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,YAAY,CAAC;gBAC3C,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,eAAe,CAAC;gBACjD,KAAK,EAAE,MAAM;aACd;YACD,MAAM;YACN,cAAc,EAAE,4BAAc,CAAC,KAAK;YACpC,kBAAkB,EAAE;gBAClB,OAAO,EAAE,KAAK;aACf;SACF,CAAC;IACJ,CAAC;CACF;AAjCY,iBAAiB;IAD7B,uBAAU,GAAE;iEAIwB,sBAAa,oBAAb,sBAAa;GAHrC,iBAAiB,CAiC7B;AAjCY,8CAAiB;;;;;;;;;;;;;ACJ9B,uDAAoD;AACpD,uDAA+C;AAE/C,yDAAyD;AACzD,qFAAqF;AAGrF,IAAa,kBAAkB,0BAA/B,MAAa,kBAAkB;IAG7B,YAAoB,aAA4B;QAA5B,kBAAa,GAAb,aAAa,CAAe;QAFvC,WAAM,GAAG,IAAI,eAAM,CAAC,oBAAkB,CAAC,IAAI,CAAC,CAAC;IAEH,CAAC;IAEpD,kBAAkB;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE5C,MAAM,QAAQ,GAAG;YACf;gBACE,EAAE,EAAE,wBAAwB;gBAC5B,GAAG,EAAE,GAAG,IAAI,0BAA0B;gBACtC,MAAM,EAAE,EAAE;aACX;YACD;gBACE,EAAE,EAAE,kBAAkB;gBACtB,GAAG,EAAE,GAAG,IAAI,kBAAkB;gBAC9B,MAAM,EAAE,EAAE;aACX;YACD;gBACE,EAAE,EAAE,kBAAkB;gBACtB,GAAG,EAAE,GAAG,IAAI,sBAAsB;gBAClC,MAAM,EAAE,EAAE;aACX;SACF,CAAC;QAEF,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;QAE1B,OAAO;YACL,QAAQ;YACR,cAAc,EAAE,EAAE;SACnB,CAAC;IACJ,CAAC;CACF;AAjCY,kBAAkB;IAD9B,uBAAU,GAAE;iEAIwB,sBAAa,oBAAb,sBAAa;GAHrC,kBAAkB,CAiC9B;AAjCY,gDAAkB;;;;;;;;;;;;ACR/B,uDAA4C;AAI5C,2CAA4B;AAEf,iBAAS,GAAG,eAAI,EAAC,SAAS,EAAE,UAAU,EAAE,sBAAsB,CAAC,CAAC;AAG7E,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IACnC,gBAAe,CAAC;IAEhB,mBAAmB;QACjB,OAAO;YACL;gBACE,QAAQ,EAAE,iBAAS;aACpB;SACF,CAAC;IACJ,CAAC;CACF;AAVY,wBAAwB;IADpC,uBAAU,GAAE;;GACA,wBAAwB,CAUpC;AAVY,4DAAwB;;;;;;;;ACTrC;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;;ACtBA,uEAA4E;AAC5E,mEAAiE;AACjE,uDAAwC;AACxC,mDAA2C;AAC3C,uDAA2C;AAC3C,6EAA6C;AAE7C,SAAe,SAAS;;QACtB,MAAM,SAAS,GAAG,IAAI,yBAAS,EAAE,CAAC;QAClC,MAAM,GAAG,GAAG,MAAM,kBAAW,CAAC,MAAM,CAAC,sBAAS,EAAE;YAC9C,MAAM,EAAE,SAAS;SAClB,CAAC,CAAC;QACH,GAAG,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;QACzB,GAAG,CAAC,qBAAqB,CAAC,IAAI,sCAAsB,EAAE,CAAC,CAAC;QAExD,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC,CAAC;QAEvB,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,GAAG,CAAC,wBAAU,CAAC,CAAC,CAAC;QAEzC,8BAAY,EAAC,GAAG,EAAE,kBAAkB,CAAC,CAAC;QAGtC,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;QAEtC,MAAM,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;YAC1B,eAAM,CAAC,GAAG,CAAC,gCAAgC,GAAG,IAAI,EAAE,MAAM,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACL,CAAC;CAAA;AAED,SAAS,EAAE,CAAC","sources":["webpack://react-retail-app/./apps/api/src/app/app.module.ts","webpack://react-retail-app/./apps/api/src/app/health/health.controller.ts","webpack://react-retail-app/./apps/api/src/app/health/health.module.ts","webpack://react-retail-app/./apps/api/src/app/setup-static.ts","webpack://react-retail-app/./apps/api/src/configs/oidc-config.service.ts","webpack://react-retail-app/./apps/api/src/configs/proxy-config.service.ts","webpack://react-retail-app/./apps/api/src/configs/serve-static-config.service.ts","webpack://react-retail-app/external commonjs \"@finastra/nestjs-logger\"","webpack://react-retail-app/external commonjs \"@finastra/nestjs-oidc\"","webpack://react-retail-app/external commonjs \"@finastra/nestjs-proxy\"","webpack://react-retail-app/external commonjs \"@nestjs/common\"","webpack://react-retail-app/external commonjs \"@nestjs/config\"","webpack://react-retail-app/external commonjs \"@nestjs/core\"","webpack://react-retail-app/external commonjs \"@nestjs/serve-static\"","webpack://react-retail-app/external commonjs \"@nestjs/terminus\"","webpack://react-retail-app/external commonjs \"compression\"","webpack://react-retail-app/external commonjs \"tslib\"","webpack://react-retail-app/external node-commonjs \"path\"","webpack://react-retail-app/webpack/bootstrap","webpack://react-retail-app/./apps/api/src/main.ts"],"sourcesContent":["import { LoggerModule } from '@finastra/nestjs-logger';\nimport { ProxyModule } from '@finastra/nestjs-proxy';\nimport { MiddlewareConsumer, Module, NestModule, RequestMethod } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { OidcModule } from '@finastra/nestjs-oidc';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { OidcConfigService } from '../configs/oidc-config.service';\nimport { ProxyConfigService } from '../configs/proxy-config.service';\nimport { appFolder, ServeStaticConfigService } from '../configs/serve-static-config.service';\nimport { HealthModule } from './health/health.module';\nimport { StaticMiddleware } from './setup-static';\n\n@Module({\n  imports: [\n    OidcModule.forRootAsync({\n      imports: [ConfigModule],\n      useClass: OidcConfigService,\n    }), \n    ConfigModule.forRoot({\n      isGlobal: true,\n      ignoreEnvFile: process.env.NODE_ENV === 'production',\n    }),\n   ServeStaticModule.forRootAsync({\n      useClass: ServeStaticConfigService,\n    }),\n    ServeStaticModule.forRoot({\n      serveRoot: '/static',\n      rootPath: appFolder,\n    }),\n    ProxyModule.forRootAsync({\n      useClass: ProxyConfigService,\n      imports: [ConfigModule],\n    }),\n    HealthModule,\n    LoggerModule,\n  ],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(StaticMiddleware)\n      .exclude(\n        { path: '/health', method: RequestMethod.ALL },\n        { path: '/login/callback', method: RequestMethod.ALL },\n        { path: '/login', method: RequestMethod.ALL }\n      )\n      .forRoutes({\n        path: '/',\n        method: RequestMethod.ALL,\n      });\n  }\n}","import { Public } from '@finastra/nestjs-oidc';\nimport { Controller, Get } from '@nestjs/common';\nimport { HealthCheck } from '@nestjs/terminus';\n\n@Controller('health')\nexport class HealthController {\n  constructor() { }\n  //constructor(private health: HealthCheckService, private mongoose: MongooseHealthIndicator) {}\n\n  @Get()\n  @Public()\n  @HealthCheck()\n  healthCheck() {\n    return true;\n    //return this.health.check([async () => this.mongoose.pingCheck('mongoose')]);\n  }\n}","import { Module } from '@nestjs/common';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { HealthController } from './health.controller';\n\n@Module({\n  imports: [TerminusModule],\n  controllers: [HealthController],\n})\nexport class HealthModule {}","import { LOGIN_SESSION_COOKIE } from '@finastra/nestjs-oidc';\nimport { Injectable, NestMiddleware } from '@nestjs/common';\nimport { Response } from 'express';\n\n@Injectable()\nexport class StaticMiddleware implements NestMiddleware {\n  use(req: any, res: Response, next: Function) {\n\n    if (req.isAuthenticated()) {\n      return next();\n    }\n\n     /* res.cookie(LOGIN_SESSION_COOKIE, 'logging in', {\n\n      maxAge: 15 * 1000 * 60,\n\n    }); */\n\n    res.redirect(`/login`);\n\n  }\n\n}","import { OidcModuleOptions, OidcOptionsFactory, UserInfoMethod } from '@finastra/nestjs-oidc';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n@Injectable()\nexport class OidcConfigService implements OidcOptionsFactory {\n  readonly logger = new Logger(OidcConfigService.name);\n\n  constructor(private configService: ConfigService) {}\n\n  createModuleConfig(): OidcModuleOptions {\n    const issuer = this.configService.get('OIDC_ISSUER');\n    const client_id = this.configService.get('OIDC_CLIENT_ID');\n    const origin = this.configService.get('OIDC_ORIGIN');\n\n    this.logger.log(`\nissuer        : ${issuer}\nclient_id     : ${client_id}\norigin        : ${origin}`);\n\n    return {\n      issuer: this.configService.get('OIDC_ISSUER'),\n      clientMetadata: {\n        client_id: this.configService.get('OIDC_CLIENT_ID'),\n        client_secret: this.configService.get('OIDC_CLIENT_SECRET'),\n      },\n      authParams: {\n        scope: this.configService.get('OIDC_SCOPE'),\n        resource: this.configService.get('OIDC_RESOURCE'),\n        nonce: 'true',\n      },\n      origin,\n      userInfoMethod: UserInfoMethod.token,\n      defaultHttpOptions: {\n        timeout: 20000,\n      }\n    };\n  }\n}","import { ProxyModuleOptions, ProxyModuleOptionsFactory } from '@finastra/nestjs-proxy';\nimport { Injectable, Logger } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\n\n// Documentation for the proxy module can be founde here:\n// https://github.com/Finastra/finastra-nodejs-libs/blob/develop/libs/proxy/README.md\n\n@Injectable()\nexport class ProxyConfigService implements ProxyModuleOptionsFactory {\n  readonly logger = new Logger(ProxyConfigService.name);\n\n  constructor(private configService: ConfigService) {}\n\n  createModuleConfig(): ProxyModuleOptions {\n    const FFDC = this.configService.get('FFDC');\n\n    const services = [\n      {\n        id: 'ACCOUNT_INFORMATION_US',\n        url: `${FFDC}/retail-us/me/account/v1`,\n        config: {}\n      },\n      {\n        id: 'CONSUMER_PROFILE',\n        url: `${FFDC}/retail-us/me/v1`,\n        config: {}\n      },\n      {\n        id: 'PERSON_TO_PERSON',\n        url: `${FFDC}/retail-us/me/p2p/v1`,\n        config: {}\n      }\n    ];\n\n    this.logger.log(services);\n\n    return {\n      services,\n      allowedCookies: [],\n    };\n  }\n}","import { Injectable } from '@nestjs/common';\nimport {\n    ServeStaticModuleOptions, ServeStaticModuleOptionsFactory\n} from '@nestjs/serve-static';\nimport { join } from 'path';\n\nexport const appFolder = join(__dirname, '../../..', 'dist/apps/retail-app');\n\n@Injectable()\nexport class ServeStaticConfigService implements ServeStaticModuleOptionsFactory {\n  constructor() {}\n\n  createLoggerOptions(): ServeStaticModuleOptions[] {\n    return [\n      {\n        rootPath: appFolder,\n      },\n    ];\n  }\n}","module.exports = require(\"@finastra/nestjs-logger\");","module.exports = require(\"@finastra/nestjs-oidc\");","module.exports = require(\"@finastra/nestjs-proxy\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/serve-static\");","module.exports = require(\"@nestjs/terminus\");","module.exports = require(\"compression\");","module.exports = require(\"tslib\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { HttpLoggingInterceptor, OMSLogger } from '@finastra/nestjs-logger';\nimport { setupSession, TokenGuard } from '@finastra/nestjs-oidc';\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport * as compression from 'compression';\nimport { AppModule } from './app/app.module';\n\nasync function bootstrap() {\n  const omsLogger = new OMSLogger();\n  const app = await NestFactory.create(AppModule, {\n    logger: omsLogger,\n  });\n  app.useLogger(omsLogger);\n  app.useGlobalInterceptors(new HttpLoggingInterceptor());\n\n  app.use(compression());\n\n  app.useGlobalGuards(app.get(TokenGuard));\n\n  setupSession(app, 'react-retail-app'); \n\n\n  const port = process.env.PORT || 3000;\n\n  await app.listen(port, () => {\n    Logger.log('Listening at http://localhost:' + port, 'main');\n  });\n}\n\nbootstrap();"],"names":[],"sourceRoot":""}